package testPack;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemFlag;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

public class MysteryChestOpen {
	
	private static String[] firstName = new String[] {"희미한", "밝은", "염려하는", "근면한", "호감가는", "공손한", "영리한", "건강한"
																, "믿을만한", "기발한", "강한", "침착한", "관대한", "태평한", "고른"
																, "즐기찬", "즐거운", "질긴", "짧은", "푸른", "흐린", "힘찬"
																, "귀여운", "느린", "노란", "높은", "딱한", "더러운", "뛰어난"
																, "뜨거운", "막다른", "매운", "무른", "미끈미끈한", "반가운", "보드라운"
																, "보람찬", "붉은", "빠른", "뿌연", "새로운", "서툰", "섣부른"
																, "성가신", "쉬운", "슬픈", "쓰린", "쓴", "아니꼬운", "아름다운"
																, "아쉬운", "아픈", "안쓰러운", "안타까운", "어린", "알맞은", "얇은"
																, "어려운", "올바른", "익은", "이른", "작은", "잘난", "잘생긴"
																, "재미있는", "적은", "젋은", "좋은", "지혜로운", "지나친", "짧은"
																, "탐스러운", "큰", "흰", "힘겨운", "희망찬", "힘찬", "흐린"
																, "대단한", "귀여운", "사랑스러운", "예쁜", "신기한", "안좋은", "나쁜"};
	private static String[] secondName = new String[] {"자연의", "자작극의", "눈의", "고목의", "고려의", "마찰의", "노래의", "만년의"
																, "만력의", "만인의", "토분의", "콧날의", "크기의", "타결의", "욕망의"
																, "탄식의", "진심의", "탐색의", "코뿔소의", "처단의", "척후의", "천군의"
																, "천륜의", "천마의", "가뭄의", "너울의", "녹지의", "뇌전의", "누명의"
																, "눈치의", "눈안개의", "혁명의", "뇌절의", "다각의", "다습의", "다신의"
																, "단교의", "다단의", "다정의", "단계의", "단선의", "단언의", "담력의"
																, "담벽의", "거인의", "답주의", "당첨의", "대교의", "대결의", "대두의"
																, "대목의", "대본의", "대절의", "참수리의", "대풍의", "덕행의", "독립의"
																, "독성의", "독아의", "독염의", "독점의", "독주의", "독파의", "돌격의"
																, "돌변의", "돌발의", "동률의", "동력의", "명지의", "동반의", "동진의"
																, "두골의", "두상의", "둔감의", "돌쇠의", "나노의", "숭어의", "재규어의"
																, "등질의", "마대의", "마비의", "군대의", "복귀의", "피안의", "인연의"
																, "연인의", "홍연의", "만개의", "만능의", "만석의", "말미의", "말년의"
																, "망국의", "망신의", "매력의", "맥도의", "멍추의", "연각의", "면례의"
																, "연분의", "멸퇴의", "명경의", "명목의", "명월의", "모함의", "목각의"
																, "목수의", "목탁의", "묘비의", "묘월의", "묘탑의", "무관의", "무대의"
																, "무명의", "무사의", "무성의", "무릎의", "무학의", "무협의", "무형의"
																, "문외의", "문화의", "미결의", "미아의", "묘탑의", "미적분의", "민권의"
																, "민속의", "민화의", "밀살의", "바다의", "박사의", "박피의", "반감의"
																, "반대의", "반란의", "반룡의", "발모의", "발전의", "방목의", "방사의"
																, "방역의", "방자의", "방화의", "배상의", "백두의", "백묵의", "백색의"
																, "백안의", "백일의", "백주의", "백화의", "법장의", "법전의", "법학의"
																, "변론의", "변성의", "별곡의", "병작의", "보감의", "보법의", "보석의"
																, "보약의", "보옥의", "보충의", "마법의", "보폭의", "복병의", "분투의"
																, "비호의", "빙하의", "사단의", "사상의", "사활의", "살수의", "산호의"
																, "삼수선의", "삼족오의", "삼천의", "상아의", "생명의", "생산의", "서방의"
																, "동방의", "생활의", "서리의", "서막의", "서학의", "석영의", "석조의"
																, "선발의", "소뇌의", "소화의", "수국의", "수비의", "수예의", "수천의"
																, "수행의", "시골의", "시대의", "시식의", "식물의", "신경의", "신통의"
																, "실수의", "쌍수의", "쐐기풀의", "아량의", "악기의", "악몽의", "안전의"
																, "암울의", "암흑의", "압력의", "애국의", "애환의", "야전의", "약조의"
																, "양민의", "양상의", "어뢰의", "어묵의", "엄지의", "엄폐의", "여론의"
																, "여백의", "역모의", "역사의", "연무의", "염마의", "영하의", "오락의"
																, "오염의", "용병의", "용암의", "용서의", "운하의", "원년의", "원자의"
																, "원초의", "위령의", "위용의", "유리의", "의역의", "인격의", "인도의"
																, "인위의", "일년의", "자기의", "자멸의", "자술의", "자전의", "작살의"
																, "잔영의", "잠수의", "재정의", "재학의", "저열의", "적대의", "전광의"
																, "전기의", "전략의", "전류의", "전속의", "전자의", "전통의", "정형의"
																, "제국의", "죽창의", "중장의", "지리의", "진기의", "집착의", "참전의"
																, "처형의", "천기의", "천궁의", "철마의", "철야의", "첩자의", "초년의"
																, "초인의", "최단의", "최대의", "추리의", "치석의", "토룡의", "특허의"
																, "판윤의", "편도의", "평균의", "평지의", "폐허의", "포구의", "피골의"
																, "필살의", "하늘의", "하사의", "학번의", "학사의", "한국의", "행운의"
																, "혈족의", "최단의", "최대의", "추리의", "치석의", "토룡의", "특허의"
																, "초인의", "황무지의", "후퇴의", "흑막의", "흡수의", "희극의", "흰눈의"
																, "철권의", "나무의", "사랑의", "그림자의", "각성의", "바다의", "사냥의"};
	private static String[] MythicFirstName = new String[] {"날선", "진귀한", "강렬한", "기묘한", "각성한", "불가사의한", "창조한", "기괴한"
																, "특별한", "광활한", "존귀한", "고결한", "관대한", "비범한", "고귀한"
																, "난폭한", "격렬한", "용감한", "무모한", "위험한", "정교한", "냉혹한"
																, "근사한", "완고한", "화려한", "견고한", "위대한", "완벽한", "해박한"};
	private static String[] MythicSecondName = new String[] {"태고의", "태왕의", "황제의", "태양의", "달의", "멸도의", "귀멸의", "멸절의"
																, "최강의", "전퇴의", "짐승의", "명계의", "무한의", "무패의", "백야의"
																, "흑야의", "삼신의", "여신의", "옥새의", "와룡의", "자유의", "태자의"
																, "초월의", "극한의", "오라의", "세계의", "진격의", "차력의", "시조의"
																, "왕의", "여왕의", "초월의", "천계의", "신의", "꿈의", "학살자의"};
	private static String[][] accessoryEffectRank1 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"70", "§9-근접 공격 시 독 데미지 8"},
			{"70", "§9-근접 공격 시 독 데미지 8"},
			{"70", "§9-근접 공격 시 독 데미지 8"},
			{"70", "§9-근접 공격 시 독 데미지 8"},
			{"70", "§9-근접 공격 시 독 데미지 8"},
			
			{"71", "§9-근접 공격 시 독 데미지 9"},
			{"71", "§9-근접 공격 시 독 데미지 9"},
			
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"}
				};
	
	private static String[][] accessoryEffectRank2 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"70", "§9-근접 공격 시 독 데미지 8"},
			
			{"71", "§9-근접 공격 시 독 데미지 9"},
			{"71", "§9-근접 공격 시 독 데미지 9"},
			{"71", "§9-근접 공격 시 독 데미지 9"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"80", "§9-원거리 공격 시 독 데미지 8"},
			
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"1000", "§9-공격력: 1000"}, 
			{"1000", "§9-공격력: 1000"}, 
			{"1000", "§9-공격력: 1000"}, 

			{"1001", "§9-공격력: 2000"}, 
			
			{"1100", "§9-추가 데미지(인간형): 1000"}, 
			{"1100", "§9-추가 데미지(인간형): 1000"},
			{"1100", "§9-추가 데미지(인간형): 1000"},
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1400", "§9-스플레시: 1000"}, 
			{"1400", "§9-스플레시: 1000"}
				};
	
	private static String[][] accessoryEffectRank3 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			
			{"42", "§9-흡혈 1.5%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			
			{"71", "§9-근접 공격 시 독 데미지 9"},
			{"71", "§9-근접 공격 시 독 데미지 9"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"73", "§9-근접 공격 시 독 데미지 11"},
			{"73", "§9-근접 공격 시 독 데미지 11"},
			
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"131", "§9-화살 장전 속도 감소 II"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			
			{"170", "§9-추위 면역"},
			
			{"1000", "§9-공격력: 1000"}, 
			{"1000", "§9-공격력: 1000"}, 
			{"1000", "§9-공격력: 1000"}, 

			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			
			{"1100", "§9-추가 데미지(인간형): 1000"}, 
			{"1100", "§9-추가 데미지(인간형): 1000"},
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1400", "§9-스플레시: 1000"}, 
			{"1400", "§9-스플레시: 1000"}, 
			{"1400", "§9-스플레시: 1000"},
			
			{"1401", "§9-스플레시: 2000"} 
				};

	private static String[][] accessoryEffectRank4 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			
			{"14", "§9-전투 경험치 25% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			
			{"24", "§9-회피 확률 25% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			
			{"71", "§9-근접 공격 시 독 데미지 9"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"73", "§9-근접 공격 시 독 데미지 11"},
			{"73", "§9-근접 공격 시 독 데미지 11"},
			
			{"81", "§9-원거리 공격 시 독 데미지 9"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"141", "§9-확산 화살 II"},
			
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			
			{"152", "§9-독 데미지 30% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			
			{"162", "§9-위더 데미지 30% 경감"},
			
			{"170", "§9-추위 면역"},
			
			{"1000", "§9-공격력: 1000"}, 
			{"1000", "§9-공격력: 1000"}, 

			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			
			{"1100", "§9-추가 데미지(인간형): 1000"}, 
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			
			{"1400", "§9-스플레시: 1000"}, 
			{"1400", "§9-스플레시: 1000"},
			
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"} 
				};
	
	private static String[][] accessoryEffectRank5 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			
			{"14", "§9-전투 경험치 25% 증가"},
			{"14", "§9-전투 경험치 25% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"32", "§9-반격 데미지 4배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			
			{"43", "§9-흡혈 2%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"73", "§9-근접 공격 시 독 데미지 11"},
			{"73", "§9-근접 공격 시 독 데미지 11"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"141", "§9-확산 화살 II"},
			{"141", "§9-확산 화살 II"},
			
			{"150", "§9-독 데미지 10% 경감"},
			
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			
			{"152", "§9-독 데미지 30% 경감"},
			{"152", "§9-독 데미지 30% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			
			{"162", "§9-위더 데미지 30% 경감"},
			{"162", "§9-위더 데미지 30% 경감"},
			
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			
			{"1003", "§9-공격력: 4000"}, 
			{"1003", "§9-공격력: 4000"}, 
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			
			{"1103", "§9-추가 데미지(인간형): 4000"},
			{"1103", "§9-추가 데미지(인간형): 4000"},
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 

			{"1303", "§9-추가 데미지(기타): 4000"}, 
			{"1303", "§9-추가 데미지(기타): 4000"}, 
			
			{"1400", "§9-스플레시: 1000"},
			
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			
			{"1402", "§9-스플레시: 3000"}
				};
	
	private static String[][] accessoryEffectRank6 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			
			{"14", "§9-전투 경험치 25% 증가"},
			{"14", "§9-전투 경험치 25% 증가"},
			{"14", "§9-전투 경험치 25% 증가"},
			
			{"15", "§9-전투 경험치 30% 증가"},
			{"15", "§9-전투 경험치 30% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"32", "§9-반격 데미지 4배"},
			{"32", "§9-반격 데미지 4배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			
			{"43", "§9-흡혈 2%"},
			{"43", "§9-흡혈 2%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			
			{"54", "§9-근접 공격 시 30% 확률로 마나 획득"},
			{"54", "§9-근접 공격 시 30% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			
			{"64", "§9-원거리 공격 시 30% 확률로 마나 획득"},
			{"64", "§9-원거리 공격 시 30% 확률로 마나 획득"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"73", "§9-근접 공격 시 독 데미지 11"},
			{"73", "§9-근접 공격 시 독 데미지 11"},
			
			{"74", "§9-근접 공격 시 독 데미지 12"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			
			{"84", "§9-원거리 공격 시 독 데미지 12"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			
			{"94", "§9-근접 공격 시 20% 확률로 10% 회복"},
			{"94", "§9-근접 공격 시 20% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			
			{"104", "§9-원거리 공격 시 20% 확률로 10% 회복"},
			{"104", "§9-원거리 공격 시 20% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			
			{"114", "§9-의문의 상자 발견 확률 25% 증가"},
			{"114", "§9-의문의 상자 발견 확률 25% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			
			{"132", "§9-화살 장전 속도 감소 III"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"141", "§9-확산 화살 II"},
			{"141", "§9-확산 화살 II"},
			
			{"142", "§9-확산 화살 III"},
			
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			
			{"152", "§9-독 데미지 30% 경감"},
			{"152", "§9-독 데미지 30% 경감"},

			{"153", "§9-독 데미지 40% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			
			{"162", "§9-위더 데미지 30% 경감"},
			{"162", "§9-위더 데미지 30% 경감"},
			
			{"163", "§9-위더 데미지 40% 경감"},
			
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			
			{"180", "§9-탄환 장전 속도 감소 I"},
			{"180", "§9-탄환 장전 속도 감소 I"},
			{"180", "§9-탄환 장전 속도 감소 I"},
			
			{"181", "§9-탄환 장전 속도 감소 II"},
			{"181", "§9-탄환 장전 속도 감소 II"},
			
			{"182", "§9-탄환 장전 속도 감소 III"},
			
			{"1000", "§9-공격력: 1000"}, 
			
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			
			{"1003", "§9-공격력: 4000"}, 
			{"1003", "§9-공격력: 4000"}, 
			{"1003", "§9-공격력: 4000"}, 
			
			{"1100", "§9-추가 데미지(인간형): 1000"},
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			
			{"1103", "§9-추가 데미지(인간형): 4000"},
			{"1103", "§9-추가 데미지(인간형): 4000"},
			{"1103", "§9-추가 데미지(인간형): 4000"},
			
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 

			{"1303", "§9-추가 데미지(기타): 4000"}, 
			{"1303", "§9-추가 데미지(기타): 4000"}, 
			{"1303", "§9-추가 데미지(기타): 4000"}, 
			
			{"1400", "§9-스플레시: 1000"},
			{"1400", "§9-스플레시: 1000"},
			
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			
			{"1402", "§9-스플레시: 3000"},
			{"1402", "§9-스플레시: 3000"},
			
			{"1403", "§9-스플레시: 4000"}
				};
	
	private static String[][] accessoryEffectRank7 = {	
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			{"10", "§9-전투 경험치 5% 증가"},
			
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			{"11", "§9-전투 경험치 10% 증가"},
			
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			{"12", "§9-전투 경험치 15% 증가"},
			
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			{"13", "§9-전투 경험치 20% 증가"},
			
			{"14", "§9-전투 경험치 25% 증가"},
			{"14", "§9-전투 경험치 25% 증가"},
			{"14", "§9-전투 경험치 25% 증가"},
			
			{"15", "§9-전투 경험치 30% 증가"},
			{"15", "§9-전투 경험치 30% 증가"},
			
			{"16", "§9-전투 경험치 40% 증가"},
			
			{"17", "§9-전투 경험치 50% 증가"},
			
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			{"20", "§9-회피 확률 5% 증가"},
			
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			{"21", "§9-회피 확률 10% 증가"},
			
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			{"22", "§9-회피 확률 15% 증가"},
			
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			{"23", "§9-회피 확률 20% 증가"},
			
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			{"24", "§9-회피 확률 25% 증가"},
			
			{"25", "§9-회피 확률 30% 증가"},
			{"25", "§9-회피 확률 30% 증가"},
			
			{"30", "§9-반격 데미지 2배"},
			{"30", "§9-반격 데미지 2배"},
			
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			{"31", "§9-반격 데미지 3배"},
			
			{"32", "§9-반격 데미지 4배"},
			{"32", "§9-반격 데미지 4배"},
			{"32", "§9-반격 데미지 4배"},
			
			{"33", "§9-반격 데미지 5배"},
			
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			{"40", "§9-흡혈 0.5%"},
			
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			{"41", "§9-흡혈 1%"},
			
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			{"42", "§9-흡혈 1.5%"},
			
			{"43", "§9-흡혈 2%"},
			{"43", "§9-흡혈 2%"},
			{"43", "§9-흡혈 2%"},
			
			{"44", "§9-흡혈 2.5%"},
			
			{"45", "§9-흡혈 3%"},
			
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			{"50", "§9-근접 공격 시 10% 확률로 마나 획득"},
			
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			{"51", "§9-근접 공격 시 15% 확률로 마나 획득"},
			
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			{"52", "§9-근접 공격 시 20% 확률로 마나 획득"},
			
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			{"53", "§9-근접 공격 시 25% 확률로 마나 획득"},
			
			{"54", "§9-근접 공격 시 30% 확률로 마나 획득"},
			{"54", "§9-근접 공격 시 30% 확률로 마나 획득"},
			{"54", "§9-근접 공격 시 30% 확률로 마나 획득"},
			
			{"55", "§9-근접 공격 시 35% 확률로 마나 획득"},
			
			{"56", "§9-근접 공격 시 40% 확률로 마나 획득"},
			
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			{"60", "§9-원거리 공격 시 10% 확률로 마나 획득"},
			
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			{"61", "§9-원거리 공격 시 15% 확률로 마나 획득"},
			
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			{"62", "§9-원거리 공격 시 20% 확률로 마나 획득"},
			
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			{"63", "§9-원거리 공격 시 25% 확률로 마나 획득"},
			
			{"64", "§9-원거리 공격 시 30% 확률로 마나 획득"},
			{"64", "§9-원거리 공격 시 30% 확률로 마나 획득"},
			{"64", "§9-원거리 공격 시 30% 확률로 마나 획득"},
			
			{"65", "§9-원거리 공격 시 35% 확률로 마나 획득"},
			
			{"66", "§9-원거리 공격 시 40% 확률로 마나 획득"},
			
			{"72", "§9-근접 공격 시 독 데미지 10"},
			{"72", "§9-근접 공격 시 독 데미지 10"},
			
			{"73", "§9-근접 공격 시 독 데미지 11"},
			{"73", "§9-근접 공격 시 독 데미지 11"},
			
			{"74", "§9-근접 공격 시 독 데미지 12"},
			{"74", "§9-근접 공격 시 독 데미지 12"},
			
			{"75", "§9-근접 공격 시 독 데미지 13"},
			
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			{"82", "§9-원거리 공격 시 독 데미지 10"},
			
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			{"83", "§9-원거리 공격 시 독 데미지 11"},
			
			{"84", "§9-원거리 공격 시 독 데미지 12"},
			
			{"85", "§9-원거리 공격 시 독 데미지 13"},
			
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			{"90", "§9-근접 공격 시 5% 확률로 10% 회복"},
			
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			{"91", "§9-근접 공격 시 8% 확률로 10% 회복"},
			
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			{"92", "§9-근접 공격 시 10% 확률로 10% 회복"},
			
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			{"93", "§9-근접 공격 시 15% 확률로 10% 회복"},
			
			{"94", "§9-근접 공격 시 20% 확률로 10% 회복"},
			{"94", "§9-근접 공격 시 20% 확률로 10% 회복"},
			{"94", "§9-근접 공격 시 20% 확률로 10% 회복"},
			
			{"95", "§9-근접 공격 시 25% 확률로 10% 회복"},
			
			{"96", "§9-근접 공격 시 30% 확률로 10% 회복"},
			
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			{"100", "§9-원거리 공격 시 5% 확률로 10% 회복"},
			
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			{"101", "§9-원거리 공격 시 8% 확률로 10% 회복"},
			
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			{"102", "§9-원거리 공격 시 10% 확률로 10% 회복"},
			
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			{"103", "§9-원거리 공격 시 15% 확률로 10% 회복"},
			
			{"104", "§9-원거리 공격 시 20% 확률로 10% 회복"},
			{"104", "§9-원거리 공격 시 20% 확률로 10% 회복"},
			
			{"105", "§9-원거리 공격 시 25% 확률로 10% 회복"},
			
			{"106", "§9-원거리 공격 시 30% 확률로 10% 회복"},
			
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			{"110", "§9-의문의 상자 발견 확률 5% 증가"},
			
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			{"111", "§9-의문의 상자 발견 확률 10% 증가"},
			
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			{"112", "§9-의문의 상자 발견 확률 15% 증가"},
			
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			{"113", "§9-의문의 상자 발견 확률 20% 증가"},
			
			{"114", "§9-의문의 상자 발견 확률 25% 증가"},
			{"114", "§9-의문의 상자 발견 확률 25% 증가"},
			{"114", "§9-의문의 상자 발견 확률 25% 증가"},
			
			{"115", "§9-의문의 상자 발견 확률 30% 증가"},
			{"115", "§9-의문의 상자 발견 확률 30% 증가"},
			
			{"116", "§9-의문의 상자 발견 확률 35% 증가"},
			{"116", "§9-의문의 상자 발견 확률 35% 증가"},
			
			{"117", "§9-의문의 상자 발견 확률 40% 증가"},
			
			{"118", "§9-의문의 상자 발견 확률 45% 증가"},
			
			{"119", "§9-의문의 상자 발견 확률 50% 증가"},
			
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			{"120", "§9-죽음에 이르는 피해를 입었을 때 3% 확률로 체력 50% 회복"},
			
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			{"121", "§9-죽음에 이르는 피해를 입었을 때 5% 확률로 체력 50% 회복"},
			
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			{"122", "§9-죽음에 이르는 피해를 입었을 때 8% 확률로 체력 50% 회복"},
			
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			{"123", "§9-죽음에 이르는 피해를 입었을 때 10% 확률로 체력 50% 회복"},
			
			{"124", "§9-죽음에 이르는 피해를 입었을 때 15% 확률로 체력 50% 회복"},
			
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			{"130", "§9-화살 장전 속도 감소 I"},
			
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			{"131", "§9-화살 장전 속도 감소 II"},
			
			{"132", "§9-화살 장전 속도 감소 III"},
			{"132", "§9-화살 장전 속도 감소 III"},
			
			{"133", "§9-화살 장전 속도 감소 IV"},
			
			{"134", "§9-화살 장전 속도 감소 V"},
			
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			{"140", "§9-확산 화살 I"},
			
			{"141", "§9-확산 화살 II"},
			{"141", "§9-확산 화살 II"},
			{"141", "§9-확산 화살 II"},
			
			{"142", "§9-확산 화살 III"},
			{"142", "§9-확산 화살 III"},
			
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			{"150", "§9-독 데미지 10% 경감"},
			
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			{"151", "§9-독 데미지 20% 경감"},
			
			{"152", "§9-독 데미지 30% 경감"},
			{"152", "§9-독 데미지 30% 경감"},
			{"152", "§9-독 데미지 30% 경감"},

			{"153", "§9-독 데미지 40% 경감"},
			
			{"154", "§9-독 데미지 50% 경감"},
			
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			{"160", "§9-위더 데미지 10% 경감"},
			
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			{"161", "§9-위더 데미지 20% 경감"},
			
			{"162", "§9-위더 데미지 30% 경감"},
			{"162", "§9-위더 데미지 30% 경감"},
			{"162", "§9-위더 데미지 30% 경감"},
			
			{"163", "§9-위더 데미지 40% 경감"},
			
			{"164", "§9-위더 데미지 50% 경감"},
			
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			{"170", "§9-추위 면역"},
			
			{"180", "§9-탄환 장전 속도 감소 I"},
			{"180", "§9-탄환 장전 속도 감소 I"},
			{"180", "§9-탄환 장전 속도 감소 I"},
			{"180", "§9-탄환 장전 속도 감소 I"},
			
			{"181", "§9-탄환 장전 속도 감소 II"},
			{"181", "§9-탄환 장전 속도 감소 II"},
			{"181", "§9-탄환 장전 속도 감소 II"},
			{"181", "§9-탄환 장전 속도 감소 II"},
			
			{"182", "§9-탄환 장전 속도 감소 III"},
			{"182", "§9-탄환 장전 속도 감소 III"},
			
			{"183", "§9-탄환 장전 속도 감소 IV"},
			
			{"184", "§9-탄환 장전 속도 감소 V"},
			
			{"1000", "§9-공격력: 1000"}, 
			
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			{"1001", "§9-공격력: 2000"}, 
			
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			{"1002", "§9-공격력: 3000"}, 
			
			{"1003", "§9-공격력: 4000"}, 
			{"1003", "§9-공격력: 4000"}, 
			{"1003", "§9-공격력: 4000"}, 
			
			{"1004", "§9-공격력: 5000"}, 
			{"1004", "§9-공격력: 5000"}, 
			
			{"1005", "§9-공격력: 6000"}, 
			
			{"1006", "§9-공격력: 7000"}, 
			
			{"1007", "§9-공격력: 8000"}, 
			
			{"1008", "§9-공격력: 9000"}, 
			
			{"1009", "§9-공격력: 10000"}, 
			
			{"1100", "§9-추가 데미지(인간형): 1000"},
			{"1100", "§9-추가 데미지(인간형): 1000"},
			
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			{"1101", "§9-추가 데미지(인간형): 2000"},
			
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			{"1102", "§9-추가 데미지(인간형): 3000"},
			
			{"1103", "§9-추가 데미지(인간형): 4000"},
			{"1103", "§9-추가 데미지(인간형): 4000"},
			{"1103", "§9-추가 데미지(인간형): 4000"},
			
			{"1104", "§9-추가 데미지(인간형): 5000"},
			{"1104", "§9-추가 데미지(인간형): 5000"},
			
			{"1105", "§9-추가 데미지(인간형): 6000"},
			
			{"1106", "§9-추가 데미지(인간형): 7000"},
			
			{"1107", "§9-추가 데미지(인간형): 8000"},
			
			{"1108", "§9-추가 데미지(인간형): 9000"},
			
			{"1109", "§9-추가 데미지(인간형): 10000"},
			
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			{"1200", "§9-추가 데미지(동물형): 1000"}, 
			
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			{"1201", "§9-추가 데미지(동물형): 2000"}, 
			
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			{"1202", "§9-추가 데미지(동물형): 3000"}, 
			
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			{"1203", "§9-추가 데미지(동물형): 4000"}, 
			
			{"1204", "§9-추가 데미지(동물형): 5000"}, 
			{"1204", "§9-추가 데미지(동물형): 5000"}, 
			
			{"1205", "§9-추가 데미지(동물형): 6000"}, 

			{"1206", "§9-추가 데미지(동물형): 7000"}, 
			
			{"1207", "§9-추가 데미지(동물형): 8000"}, 
			
			{"1208", "§9-추가 데미지(동물형): 9000"}, 
			
			{"1209", "§9-추가 데미지(동물형): 10000"}, 
			
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			{"1300", "§9-추가 데미지(기타): 1000"}, 
			
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			{"1301", "§9-추가 데미지(기타): 2000"}, 
			
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 
			{"1302", "§9-추가 데미지(기타): 3000"}, 

			{"1303", "§9-추가 데미지(기타): 4000"}, 
			{"1303", "§9-추가 데미지(기타): 4000"}, 
			{"1303", "§9-추가 데미지(기타): 4000"}, 
			
			{"1304", "§9-추가 데미지(기타): 5000"},
			{"1304", "§9-추가 데미지(기타): 5000"},
			
			{"1305", "§9-추가 데미지(기타): 6000"},
			
			{"1306", "§9-추가 데미지(기타): 7000"},
			
			{"1307", "§9-추가 데미지(기타): 8000"},
			
			{"1308", "§9-추가 데미지(기타): 9000"},
			
			{"1309", "§9-추가 데미지(기타): 10000"},
			
			{"1400", "§9-스플레시: 1000"},
			{"1400", "§9-스플레시: 1000"},
			{"1400", "§9-스플레시: 1000"},
			
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			{"1401", "§9-스플레시: 2000"},
			
			{"1402", "§9-스플레시: 3000"},
			{"1402", "§9-스플레시: 3000"},
			{"1402", "§9-스플레시: 3000"},
			{"1402", "§9-스플레시: 3000"},
			
			{"1403", "§9-스플레시: 4000"},
			{"1403", "§9-스플레시: 4000"},
			{"1403", "§9-스플레시: 4000"},
			
			{"1404", "§9-스플레시: 5000"},
			{"1404", "§9-스플레시: 5000"},
			
			{"1405", "§9-스플레시: 6000"},
			
			{"1406", "§9-스플레시: 7000"},
			
			{"1407", "§9-스플레시: 8000"},
			
			{"1408", "§9-스플레시: 9000"},
			
			{"1409", "§9-스플레시: 10000"},
				};
	
	private int taskID;
	Random rnd = new Random();
	
	public void make(Player player, Inventory inv) {
		try {
			taskID = Bukkit.getScheduler().scheduleSyncRepeatingTask(Main.getPlugin(Main.class), new Runnable() {

				int time = 0;
				ThreadMysteryChest td = new ThreadMysteryChest(player.getUniqueId());

				@Override
				public void run() {
					if (!td.hasID()) {
						td.setID(taskID);
					}

					if (time == 0) {
						for(ItemStack item : inv.getContents()) {
							if (item == null) {
								continue;
							}
							if(item.getType() == Material.PLAYER_HEAD) {
								if(item.getAmount() == 1) {
									if(item.getItemMeta().getDisplayName().substring(2).equals("의문의 상자")) {
										player.getWorld().playSound(player.getLocation(), Sound.BLOCK_CHEST_OPEN, 1.0f, 1.0f);
										item.setType(Material.HEART_OF_THE_SEA);
									}
								}
							}
						}
					}

					if (time >= 60) {
						int idx = 0;
						for(ItemStack item : inv.getContents()) {
							if (item == null) {
								idx++;
								continue;
							}
							if(item.getType() == Material.HEART_OF_THE_SEA) {
								if(item.getAmount() == 1) {
									ItemStack newItem = setAll(item, player);
									inv.setItem(idx, newItem);
								}
							}
							idx++;
						}
						td.endTask();
						td.removeID();
						return;
					}

					time++;
				}

			}, 0, 1);
		} catch(Exception e) {
			
		}
			
	}
	
	public ItemStack setAll(ItemStack item, Player player) {
		ItemMeta im = item.getItemMeta();
		String name = im.getDisplayName();
		double mul = 1;
		String grade = name.substring(0, 2);
		if(grade.equals("§e")) {
			mul = 0.7;
		} else if(grade.equals("§d")) {
			mul = 1;
		} else if(grade.equals("§b")) {
			mul = 1.3;
		} else if(grade.equals("§4")) {
			mul = 1.8;
		} else if(grade.equals("§5")) {
			mul = 3;
		} else if(grade.equals("§2")) {
			return randomAccessory(player);
		}
		
		String range = im.getLore().get(0);
		String[] ary = range.substring(11).split("-");
		int minLvl = Integer.parseInt(ary[0]);
		int maxLvl = Integer.parseInt(ary[1]);
		
		int lvl = rnd.nextInt(11) + minLvl; 
		if(lvl > maxLvl) {
			lvl = maxLvl;
		}
		
		if(lvl >= 700) {
			if(lvl >= 800) {
				if(lvl >= 900) {
					if(lvl >= 1000) {
						lvl = 1000;
					} else {
						lvl = 900;
					}
				} else {
					lvl = 800;
				}
			} else {
				lvl = 700;
			}
		}
		
		int total = (int) (Math.exp(Math.pow((double)lvl, 0.34)) * mul);
		
		if(total < 0) {
			total = 1;
		}
		
		int[] stat = {0,0,0,0,0,0,0,0,0,0,0};
		
		int statNum = rnd.nextInt(10);
		
		if(statNum == 0) {
			int tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
		} else if(statNum == 1) {
			int tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
		} else if(statNum == 2) {
			int tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
		} else if(statNum == 3) {
			int tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
		} else if(statNum == 4) {
			int tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
		} else if(statNum == 5) {
			int tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
		} else if(statNum == 6) {
			int tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
		} else if(statNum == 7) {
			int tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
		} else if(statNum == 8) {
			int tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
		} else if(statNum == 9) {
			int tmp = rnd.nextInt(total);
			stat[3] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[6] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[5] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[0] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[1] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[2] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[4] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[7] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[8] = tmp;
			total -= tmp;
			tmp = rnd.nextInt(total);
			stat[9] = tmp;
			total -= tmp;
		}
		
		stat[10] = lvl;
		
		if(stat[0] > 1000000) {
			stat[0] = 1000000;
		}
		if(stat[1] > 1000000) {
			stat[1] = 1000000;
		}
		if(stat[2] > 1000000) {
			stat[2] = 1000000;
		}
		if(stat[3] > 1000000) {
			stat[3] = 1000000;
		}
		if(stat[4] > 1000000) {
			stat[4] = 1000000;
		}
		if(stat[5] > 30000) {
			stat[5] = 30000;
		}
		if(stat[6] > 30000) {
			stat[6] = 30000;
		}
		if(stat[7] > 30000) {
			stat[7] = 30000;
		}
		if(stat[8] > 30000) {
			stat[8] = 30000;
		}
		if(stat[9] > 1000000) {
			stat[9] = 1000000;
		}
		if(stat[10] > 1000) {
			stat[10] = 1000;
		}
		
		String localName = Integer.toString(stat[0]) + "," + stat[1] + "," + stat[2] + "," + stat[3] + "," + stat[4] + "," + stat[5] + "," + stat[6] + "," + stat[7] + "," + stat[8] + "," + stat[9] + "," + stat[10];

		int equipType = rnd.nextInt(6);
		
		if(equipType == 0) {
			System.out.println(player.getDisplayName() + "이/가" + grade + " 헬멧" + "(" + localName + ")" + ChatColor.WHITE + "을/를 획득하였다.(상자)");
		} else if(equipType == 1) {
			System.out.println(player.getDisplayName() + "이/가" + grade + " 갑옷" + "(" + localName + ")" + ChatColor.WHITE + "을/를 획득하였다.(상자)");
		} else if(equipType == 2) {
			System.out.println(player.getDisplayName() + "이/가" + grade + " 각반" + "(" + localName + ")" + ChatColor.WHITE + "을/를 획득하였다.(상자)");
		} else if(equipType == 3) {
			System.out.println(player.getDisplayName() + "이/가" + grade + " 신발" + "(" + localName + ")" + ChatColor.WHITE + "을/를 획득하였다.(상자)");
		} else {
			System.out.println(player.getDisplayName() + "이/가" + grade + " 무기" + "(" + localName + ")" + ChatColor.WHITE + "을/를 획득하였다.(상자)");
		}
		
		ItemStack result = makeItem(player, equipType, lvl, localName, grade);
		return result;
	}
	
	public ItemStack makeItem(Player player, int equipType, int lvl, String localName, String grade) {
		String name = name(grade);
		if(equipType == 0 && lvl < 100) {
			ItemStack equip = new ItemStack(Material.LEATHER_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 0 && lvl < 200) {
			ItemStack equip = new ItemStack(Material.CHAINMAIL_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 0 && lvl < 400) {
			ItemStack equip = new ItemStack(Material.IRON_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 0 && lvl < 700) {
			ItemStack equip = new ItemStack(Material.GOLDEN_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 0 && lvl < 900) {
			ItemStack equip = new ItemStack(Material.DIAMOND_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 0 && lvl <= 1000) {
			ItemStack equip = new ItemStack(Material.NETHERITE_HELMET);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 헬멧");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 헬멧");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl < 100) {
			ItemStack equip = new ItemStack(Material.LEATHER_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl < 200) {
			ItemStack equip = new ItemStack(Material.CHAINMAIL_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl < 400) {
			ItemStack equip = new ItemStack(Material.IRON_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl < 700) {
			ItemStack equip = new ItemStack(Material.GOLDEN_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl < 900) {
			ItemStack equip = new ItemStack(Material.DIAMOND_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 1 && lvl <= 1000) {
			ItemStack equip = new ItemStack(Material.NETHERITE_CHESTPLATE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 갑옷");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 갑옷");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl < 100) {
			ItemStack equip = new ItemStack(Material.LEATHER_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl < 200) {
			ItemStack equip = new ItemStack(Material.CHAINMAIL_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl < 400) {
			ItemStack equip = new ItemStack(Material.IRON_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl < 700) {
			ItemStack equip = new ItemStack(Material.GOLDEN_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl < 900) {
			ItemStack equip = new ItemStack(Material.DIAMOND_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 2 && lvl <= 1000) {
			ItemStack equip = new ItemStack(Material.NETHERITE_LEGGINGS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 각반");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 각반");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl < 100) {
			ItemStack equip = new ItemStack(Material.LEATHER_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl < 200) {
			ItemStack equip = new ItemStack(Material.CHAINMAIL_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl < 400) {
			ItemStack equip = new ItemStack(Material.IRON_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl < 700) {
			ItemStack equip = new ItemStack(Material.GOLDEN_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl < 900) {
			ItemStack equip = new ItemStack(Material.DIAMOND_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else if(equipType == 3 && lvl <= 1000) {
			ItemStack equip = new ItemStack(Material.NETHERITE_BOOTS);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setLocalizedName(localName);
			equipIm.setDisplayName(grade + name + " 신발");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 신발");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			return equip;
		} else {
			Random rnd = new Random();
			int weaponType = rnd.nextInt(51);
			
			if(weaponType == 0) {
				ItemStack equip = new ItemStack(Material.OAK_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 1) {
				ItemStack equip = new ItemStack(Material.SPRUCE_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 2) {
				ItemStack equip = new ItemStack(Material.BIRCH_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 3) {
				ItemStack equip = new ItemStack(Material.JUNGLE_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 4) {
				ItemStack equip = new ItemStack(Material.ACACIA_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 5) {
				ItemStack equip = new ItemStack(Material.DARK_OAK_LEAVES);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 6) {
				ItemStack equip = new ItemStack(Material.STONE_STAIRS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 7) {
				ItemStack equip = new ItemStack(Material.COBBLESTONE_WALL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 8) {
				ItemStack equip = new ItemStack(Material.BROWN_CARPET);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 9) {
				ItemStack equip = new ItemStack(Material.GREEN_CARPET);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 도끼");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 10) {
				ItemStack equip = new ItemStack(Material.BLACK_CARPET);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 도끼");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 11) {
				ItemStack equip = new ItemStack(Material.STONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 12) {
				ItemStack equip = new ItemStack(Material.BIRCH_PLANKS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 13) {
				ItemStack equip = new ItemStack(Material.JUNGLE_PLANKS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 14) {
				ItemStack equip = new ItemStack(Material.ACACIA_PLANKS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 15) {
				ItemStack equip = new ItemStack(Material.DARK_OAK_PLANKS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 16) {
				ItemStack equip = new ItemStack(Material.BEDROCK);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 17) {
				ItemStack equip = new ItemStack(Material.SPRUCE_LOG);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 18) {
				ItemStack equip = new ItemStack(Material.BIRCH_LOG);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 19) {
				ItemStack equip = new ItemStack(Material.JUNGLE_LOG);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 20) {
				ItemStack equip = new ItemStack(Material.ACACIA_LOG);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 21) {
				ItemStack equip = new ItemStack(Material.DARK_OAK_LOG);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 22) {
				ItemStack equip = new ItemStack(Material.SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 망치");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 23) {
				ItemStack equip = new ItemStack(Material.CHISELED_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 24) {
				ItemStack equip = new ItemStack(Material.CUT_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 25) {
				ItemStack equip = new ItemStack(Material.LAPIS_BLOCK);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 26) {
				ItemStack equip = new ItemStack(Material.MAGENTA_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 도끼");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 27) {
				ItemStack equip = new ItemStack(Material.LIME_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 도끼");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 28) {
				ItemStack equip = new ItemStack(Material.GRAY_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 29) {
				ItemStack equip = new ItemStack(Material.LIGHT_GRAY_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 30) {
				ItemStack equip = new ItemStack(Material.CYAN_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 31) {
				ItemStack equip = new ItemStack(Material.PURPLE_WOOL);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 검");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 32) {
				ItemStack equip = new ItemStack(Material.OAK_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 33) {
				ItemStack equip = new ItemStack(Material.SPRUCE_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 34) {
				ItemStack equip = new ItemStack(Material.BIRCH_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 35) {
				ItemStack equip = new ItemStack(Material.JUNGLE_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 36) {
				ItemStack equip = new ItemStack(Material.ACACIA_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 37) {
				ItemStack equip = new ItemStack(Material.DARK_OAK_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 창");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 38) {
				ItemStack equip = new ItemStack(Material.STONE_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 39) {
				ItemStack equip = new ItemStack(Material.COBBLESTONE_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 40) {
				ItemStack equip = new ItemStack(Material.STONE_BRICK_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 41) {
				ItemStack equip = new ItemStack(Material.NETHER_BRICK_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 42) {
				ItemStack equip = new ItemStack(Material.QUARTZ_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 43) {
				ItemStack equip = new ItemStack(Material.RED_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 44) {
				ItemStack equip = new ItemStack(Material.RED_SANDSTONE_SLAB);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 45) {
				ItemStack equip = new ItemStack(Material.SMOOTH_RED_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 46) {
				ItemStack equip = new ItemStack(Material.OBSIDIAN);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 47) {
				ItemStack equip = new ItemStack(Material.SMOOTH_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 48) {
				ItemStack equip = new ItemStack(Material.CHISELED_RED_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 49) {
				ItemStack equip = new ItemStack(Material.CUT_RED_SANDSTONE);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			} else if(weaponType == 50) {
				ItemStack equip = new ItemStack(Material.RED_SANDSTONE_STAIRS);
				ItemMeta equipIm = equip.getItemMeta();
				equipIm.setLocalizedName(localName);
				equipIm.setDisplayName(grade + name + " 무기");
				ArrayList<String> equipLore = new ArrayList();
				equipLore.add(ChatColor.GRAY + "레벨 제한: " + lvl);
				equipLore.add(ChatColor.GRAY + " ");
				equipLore.add(ChatColor.GRAY + player.getDisplayName() + "가 발견한 무기");
				equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
				equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
				equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
				equipIm.setUnbreakable(true);
				equipIm.setLore(equipLore);
				equip.setItemMeta(equipIm);
				return equip;
			}
		}
		return null;
	}
	
	public ItemStack randomAccessory(Player player) {
		int rndRank = rnd.nextInt(10000);
		int rank = 1;
		if(rndRank < 5) {
			rank = 7;
		} else if(rndRank < 20) {
			rank = 6;
		} else if(rndRank < 50) {
			rank = 5;
		} else if(rndRank < 100) {
			rank = 4;
		} else if(rndRank < 300) {
			rank = 3;
		} else if(rndRank < 1000) {
			rank = 2;
		} else {
			rank = 1;
		}
		
		int rndLine = rnd.nextInt(10000);
		int line = 1;
		if(rndLine < 1) {
			line = 5;
		} else if(rndLine < 5) {
			line = 4;
		} else if(rndLine < 50) {
			line = 3;
		} else if(rndLine < 200) {
			line = 2;
		} else {
			line = 1;
		}
		
		System.out.println(player.getDisplayName() + "님이 " + rank + "랭크, " + line + "줄 장신구를 획득했다. (상자)");
		return makeAccessory(rank, line);
	}
	
	public ItemStack makeAccessory(int rank, int line) {
		// 잠재력이 숨겨진 반지
		// 희미한 광택의 반지
		// 황금빛이 맴도는 반지
		// 매혹적인 타락의 반지
		// 빛나는 보주의 반지
		// 피의 서리 반지
		// 검은 기운의 반지
		
		ItemStack equip = null;
		String[][] allTable = null;
		
		if(rank == 1) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10000);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.GRAY + "잠재력이 숨겨진 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 1");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "아직 발견된지 얼마 안된 반지");
			equipLore.add(ChatColor.GRAY + "회색빛의 탁한 보석안에 숨겨진 잠재력은 아무도 모른다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank1;
		} else if(rank == 2) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10001);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.WHITE + "희미한 광택의 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 2");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "하얀 보석이 돋보이는 반지");
			equipLore.add(ChatColor.GRAY + "아직 보석에 특성이 부여되지 않았다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank2;
		} else if(rank == 3) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10002);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.YELLOW + "황금빛이 맴도는 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 3");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "황금색 보석이 비싸보이는 반지");
			equipLore.add(ChatColor.GRAY + "에일에서 평범하게 볼 수 있는 보석이다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank3;
		} else if(rank == 4) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10003);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.LIGHT_PURPLE + "매혹적인 타락의 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 4");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "보라색의 매혹적인 빛이 풍기는 반지");
			equipLore.add(ChatColor.GRAY + "포보르의 힘이 약간 첨가되었다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank4;
		} else if(rank == 5) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10004);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.AQUA + "빛나는 보주의 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 5");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "다이아몬드를 연상시키는 반지");
			equipLore.add(ChatColor.GRAY + "포보르의 힘이 정화되어 깨끗해졌다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank5;
		} else if(rank == 6) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10005);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.DARK_RED + "피의 서리 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 6");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "기나긴 살육 끝에 피 빛을 보이는 반지");
			equipLore.add(ChatColor.GRAY + "지금까지 죽인 영혼들이 반지를 감싸고 있다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank6;
		} else if(rank == 7) {
			equip = new ItemStack(Material.DIAMOND_AXE);
			ItemMeta equipIm = equip.getItemMeta();
			equipIm.setCustomModelData(10006);
			equipIm.setLocalizedName("0,0,0,0,0,0,0,0,0,0,700");
			equipIm.setDisplayName(ChatColor.DARK_PURPLE + "검은 기운의 반지");
			ArrayList<String> equipLore = new ArrayList();
			equipLore.add(ChatColor.GRAY + "레벨 제한: 700");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "Rank: 7");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.DARK_GRAY + "내구도: 300/300");
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(ChatColor.GRAY + "포보르 왕의 힘이 담긴 반지");
			equipLore.add(ChatColor.GRAY + "더 강화를 하면 반지에 무리가 갈 것 같다.");
			equipIm.addItemFlags(ItemFlag.HIDE_ENCHANTS);
			equipIm.addItemFlags(ItemFlag.HIDE_ATTRIBUTES);
			equipIm.addItemFlags(ItemFlag.HIDE_UNBREAKABLE);
			equipIm.setUnbreakable(true);
			equipIm.setLore(equipLore);
			equip.setItemMeta(equipIm);
			
			allTable = accessoryEffectRank7;
		} else {
			return null;
		}
		
		if(line == 1) {
			String[] option1 = getRandom(allTable);
			ItemMeta equipIm = equip.getItemMeta();
			ArrayList<String> equipLore = (ArrayList<String>) equipIm.getLore();
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(option1[1]);
			equipIm.setLore(equipLore);
			String localName = equipIm.getLocalizedName();
			localName = makeEnch(localName, option1[0], 5);
			equipIm.setLocalizedName(localName);
			equip.setItemMeta(equipIm);
		} else if(line == 2) {
			String[] option1 = getRandom(allTable);
			String[] option2 = getRandom(allTable);
			ItemMeta equipIm = equip.getItemMeta();
			ArrayList<String> equipLore = (ArrayList<String>) equipIm.getLore();
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(option1[1]);
			equipLore.add(option2[1]);
			equipIm.setLore(equipLore);
			String localName = equipIm.getLocalizedName();
			localName = makeEnch(localName, option1[0], 5);
			localName = makeEnch(localName, option2[0], 6);
			equipIm.setLocalizedName(localName);
			equip.setItemMeta(equipIm);
		} else if(line == 3) {
			String[] option1 = getRandom(allTable);
			String[] option2 = getRandom(allTable);
			String[] option3 = getRandom(allTable);
			ItemMeta equipIm = equip.getItemMeta();
			ArrayList<String> equipLore = (ArrayList<String>) equipIm.getLore();
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(option1[1]);
			equipLore.add(option2[1]);
			equipLore.add(option3[1]);
			equipIm.setLore(equipLore);
			String localName = equipIm.getLocalizedName();
			localName = makeEnch(localName, option1[0], 5);
			localName = makeEnch(localName, option2[0], 6);
			localName = makeEnch(localName, option3[0], 7);
			equipIm.setLocalizedName(localName);
			equip.setItemMeta(equipIm);
		} else if(line == 4) {
			String[] option1 = getRandom(allTable);
			String[] option2 = getRandom(allTable);
			String[] option3 = getRandom(allTable);
			String[] option4 = getRandom(allTable);
			ItemMeta equipIm = equip.getItemMeta();
			ArrayList<String> equipLore = (ArrayList<String>) equipIm.getLore();
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(option1[1]);
			equipLore.add(option2[1]);
			equipLore.add(option3[1]);
			equipLore.add(option4[1]);
			equipIm.setLore(equipLore);
			String localName = equipIm.getLocalizedName();
			localName = makeEnch(localName, option1[0], 5);
			localName = makeEnch(localName, option2[0], 6);
			localName = makeEnch(localName, option3[0], 7);
			localName = makeEnch(localName, option4[0], 8);
			equipIm.setLocalizedName(localName);
			equip.setItemMeta(equipIm);
		} else if(line == 5) {
			String[] option1 = getRandom(allTable);
			String[] option2 = getRandom(allTable);
			String[] option3 = getRandom(allTable);
			String[] option4 = getRandom(allTable);
			String[] option5 = getRandom(allTable);
			ItemMeta equipIm = equip.getItemMeta();
			ArrayList<String> equipLore = (ArrayList<String>) equipIm.getLore();
			equipLore.add(ChatColor.GRAY + " ");
			equipLore.add(option1[1]);
			equipLore.add(option2[1]);
			equipLore.add(option3[1]);
			equipLore.add(option4[1]);
			equipLore.add(option5[1]);
			equipIm.setLore(equipLore);
			String localName = equipIm.getLocalizedName();
			localName = makeEnch(localName, option1[0], 5);
			localName = makeEnch(localName, option2[0], 6);
			localName = makeEnch(localName, option3[0], 7);
			localName = makeEnch(localName, option4[0], 8);
			localName = makeEnch(localName, option5[0], 9);
			equipIm.setLocalizedName(localName);
			equip.setItemMeta(equipIm);
		}
		
		return fixStat(equip);
	}

	public ItemStack fixStat(ItemStack item) {
		ItemMeta itemIm = item.getItemMeta();

		String localName = itemIm.getLocalizedName();
		localName = makeEnch(localName, "0", 0);
		localName = makeEnch(localName, "0", 1);
		localName = makeEnch(localName, "0", 2);
		localName = makeEnch(localName, "0", 3);
		localName = makeEnch(localName, "0", 4);
		itemIm.setLocalizedName(localName);
		
		String[] spac = itemIm.getLocalizedName().split(",");
		if(spac[5].equals("1000")) {
			localName = addEnch(localName, "1000", 0);
		} else if(spac[5].equals("1001")) {
			localName = addEnch(localName, "2000", 0);
		} else if(spac[5].equals("1002")) {
			localName = addEnch(localName, "3000", 0);
		} else if(spac[5].equals("1003")) {
			localName = addEnch(localName, "4000", 0);
		} else if(spac[5].equals("1004")) {
			localName = addEnch(localName, "5000", 0);
		} else if(spac[5].equals("1005")) {
			localName = addEnch(localName, "6000", 0);
		} else if(spac[5].equals("1006")) {
			localName = addEnch(localName, "7000", 0);
		} else if(spac[5].equals("1007")) {
			localName = addEnch(localName, "8000", 0);
		} else if(spac[5].equals("1008")) {
			localName = addEnch(localName, "9000", 0);
		} else if(spac[5].equals("1009")) {
			localName = addEnch(localName, "10000", 0);
		} else if(spac[5].equals("1100")) {
			localName = addEnch(localName, "1000", 1);
		} else if(spac[5].equals("1101")) {
			localName = addEnch(localName, "2000", 1);
		} else if(spac[5].equals("1102")) {
			localName = addEnch(localName, "3000", 1);
		} else if(spac[5].equals("1103")) {
			localName = addEnch(localName, "4000", 1);
		} else if(spac[5].equals("1104")) {
			localName = addEnch(localName, "5000", 1);
		} else if(spac[5].equals("1105")) {
			localName = addEnch(localName, "6000", 1);
		} else if(spac[5].equals("1106")) {
			localName = addEnch(localName, "7000", 1);
		} else if(spac[5].equals("1107")) {
			localName = addEnch(localName, "8000", 1);
		} else if(spac[5].equals("1108")) {
			localName = addEnch(localName, "9000", 1);
		} else if(spac[5].equals("1109")) {
			localName = addEnch(localName, "10000", 1);
		} else if(spac[5].equals("1200")) {
			localName = addEnch(localName, "1000", 2);
		} else if(spac[5].equals("1201")) {
			localName = addEnch(localName, "2000", 2);
		} else if(spac[5].equals("1202")) {
			localName = addEnch(localName, "3000", 2);
		} else if(spac[5].equals("1203")) {
			localName = addEnch(localName, "4000", 2);
		} else if(spac[5].equals("1204")) {
			localName = addEnch(localName, "5000", 2);
		} else if(spac[5].equals("1205")) {
			localName = addEnch(localName, "6000", 2);
		} else if(spac[5].equals("1206")) {
			localName = addEnch(localName, "7000", 2);
		} else if(spac[5].equals("1207")) {
			localName = addEnch(localName, "8000", 2);
		} else if(spac[5].equals("1208")) {
			localName = addEnch(localName, "9000", 2);
		} else if(spac[5].equals("1209")) {
			localName = addEnch(localName, "10000", 2);
		} else if(spac[5].equals("1300")) {
			localName = addEnch(localName, "1000", 3);
		} else if(spac[5].equals("1301")) {
			localName = addEnch(localName, "2000", 3);
		} else if(spac[5].equals("1302")) {
			localName = addEnch(localName, "3000", 3);
		} else if(spac[5].equals("1303")) {
			localName = addEnch(localName, "4000", 3);
		} else if(spac[5].equals("1304")) {
			localName = addEnch(localName, "5000", 3);
		} else if(spac[5].equals("1305")) {
			localName = addEnch(localName, "6000", 3);
		} else if(spac[5].equals("1306")) {
			localName = addEnch(localName, "7000", 3);
		} else if(spac[5].equals("1307")) {
			localName = addEnch(localName, "8000", 3);
		} else if(spac[5].equals("1308")) {
			localName = addEnch(localName, "9000", 3);
		} else if(spac[5].equals("1309")) {
			localName = addEnch(localName, "10000", 3);
		} else if(spac[5].equals("1400")) {
			localName = addEnch(localName, "1000", 4);
		} else if(spac[5].equals("1401")) {
			localName = addEnch(localName, "2000", 4);
		} else if(spac[5].equals("1402")) {
			localName = addEnch(localName, "3000", 4);
		} else if(spac[5].equals("1403")) {
			localName = addEnch(localName, "4000", 4);
		} else if(spac[5].equals("1404")) {
			localName = addEnch(localName, "5000", 4);
		} else if(spac[5].equals("1405")) {
			localName = addEnch(localName, "6000", 4);
		} else if(spac[5].equals("1406")) {
			localName = addEnch(localName, "7000", 4);
		} else if(spac[5].equals("1407")) {
			localName = addEnch(localName, "8000", 4);
		} else if(spac[5].equals("1408")) {
			localName = addEnch(localName, "9000", 4);
		} else if(spac[5].equals("1409")) {
			localName = addEnch(localName, "10000", 4);
		}
		
		if(spac[6].equals("1000")) {
			localName = addEnch(localName, "1000", 0);
		} else if(spac[6].equals("1001")) {
			localName = addEnch(localName, "2000", 0);
		} else if(spac[6].equals("1002")) {
			localName = addEnch(localName, "3000", 0);
		} else if(spac[6].equals("1003")) {
			localName = addEnch(localName, "4000", 0);
		} else if(spac[6].equals("1004")) {
			localName = addEnch(localName, "5000", 0);
		} else if(spac[6].equals("1005")) {
			localName = addEnch(localName, "6000", 0);
		} else if(spac[6].equals("1006")) {
			localName = addEnch(localName, "7000", 0);
		} else if(spac[6].equals("1007")) {
			localName = addEnch(localName, "8000", 0);
		} else if(spac[6].equals("1008")) {
			localName = addEnch(localName, "9000", 0);
		} else if(spac[6].equals("1009")) {
			localName = addEnch(localName, "10000", 0);
		} else if(spac[6].equals("1100")) {
			localName = addEnch(localName, "1000", 1);
		} else if(spac[6].equals("1101")) {
			localName = addEnch(localName, "2000", 1);
		} else if(spac[6].equals("1102")) {
			localName = addEnch(localName, "3000", 1);
		} else if(spac[6].equals("1103")) {
			localName = addEnch(localName, "4000", 1);
		} else if(spac[6].equals("1104")) {
			localName = addEnch(localName, "5000", 1);
		} else if(spac[6].equals("1105")) {
			localName = addEnch(localName, "6000", 1);
		} else if(spac[6].equals("1106")) {
			localName = addEnch(localName, "7000", 1);
		} else if(spac[6].equals("1107")) {
			localName = addEnch(localName, "8000", 1);
		} else if(spac[6].equals("1108")) {
			localName = addEnch(localName, "9000", 1);
		} else if(spac[6].equals("1109")) {
			localName = addEnch(localName, "10000", 1);
		} else if(spac[6].equals("1200")) {
			localName = addEnch(localName, "1000", 2);
		} else if(spac[6].equals("1201")) {
			localName = addEnch(localName, "2000", 2);
		} else if(spac[6].equals("1202")) {
			localName = addEnch(localName, "3000", 2);
		} else if(spac[6].equals("1203")) {
			localName = addEnch(localName, "4000", 2);
		} else if(spac[6].equals("1204")) {
			localName = addEnch(localName, "5000", 2);
		} else if(spac[6].equals("1205")) {
			localName = addEnch(localName, "6000", 2);
		} else if(spac[6].equals("1206")) {
			localName = addEnch(localName, "7000", 2);
		} else if(spac[6].equals("1207")) {
			localName = addEnch(localName, "8000", 2);
		} else if(spac[6].equals("1208")) {
			localName = addEnch(localName, "9000", 2);
		} else if(spac[6].equals("1209")) {
			localName = addEnch(localName, "10000", 2);
		} else if(spac[6].equals("1300")) {
			localName = addEnch(localName, "1000", 3);
		} else if(spac[6].equals("1301")) {
			localName = addEnch(localName, "2000", 3);
		} else if(spac[6].equals("1302")) {
			localName = addEnch(localName, "3000", 3);
		} else if(spac[6].equals("1303")) {
			localName = addEnch(localName, "4000", 3);
		} else if(spac[6].equals("1304")) {
			localName = addEnch(localName, "5000", 3);
		} else if(spac[6].equals("1305")) {
			localName = addEnch(localName, "6000", 3);
		} else if(spac[6].equals("1306")) {
			localName = addEnch(localName, "7000", 3);
		} else if(spac[6].equals("1307")) {
			localName = addEnch(localName, "8000", 3);
		} else if(spac[6].equals("1308")) {
			localName = addEnch(localName, "9000", 3);
		} else if(spac[6].equals("1309")) {
			localName = addEnch(localName, "10000", 3);
		} else if(spac[6].equals("1400")) {
			localName = addEnch(localName, "1000", 4);
		} else if(spac[6].equals("1401")) {
			localName = addEnch(localName, "2000", 4);
		} else if(spac[6].equals("1402")) {
			localName = addEnch(localName, "3000", 4);
		} else if(spac[6].equals("1403")) {
			localName = addEnch(localName, "4000", 4);
		} else if(spac[6].equals("1404")) {
			localName = addEnch(localName, "5000", 4);
		} else if(spac[6].equals("1405")) {
			localName = addEnch(localName, "6000", 4);
		} else if(spac[6].equals("1406")) {
			localName = addEnch(localName, "7000", 4);
		} else if(spac[6].equals("1407")) {
			localName = addEnch(localName, "8000", 4);
		} else if(spac[6].equals("1408")) {
			localName = addEnch(localName, "9000", 4);
		} else if(spac[6].equals("1409")) {
			localName = addEnch(localName, "10000", 4);
		}
		
		if(spac[7].equals("1000")) {
			localName = addEnch(localName, "1000", 0);
		} else if(spac[7].equals("1001")) {
			localName = addEnch(localName, "2000", 0);
		} else if(spac[7].equals("1002")) {
			localName = addEnch(localName, "3000", 0);
		} else if(spac[7].equals("1003")) {
			localName = addEnch(localName, "4000", 0);
		} else if(spac[7].equals("1004")) {
			localName = addEnch(localName, "5000", 0);
		} else if(spac[7].equals("1005")) {
			localName = addEnch(localName, "6000", 0);
		} else if(spac[7].equals("1006")) {
			localName = addEnch(localName, "7000", 0);
		} else if(spac[7].equals("1007")) {
			localName = addEnch(localName, "8000", 0);
		} else if(spac[7].equals("1008")) {
			localName = addEnch(localName, "9000", 0);
		} else if(spac[7].equals("1009")) {
			localName = addEnch(localName, "10000", 0);
		} else if(spac[7].equals("1100")) {
			localName = addEnch(localName, "1000", 1);
		} else if(spac[7].equals("1101")) {
			localName = addEnch(localName, "2000", 1);
		} else if(spac[7].equals("1102")) {
			localName = addEnch(localName, "3000", 1);
		} else if(spac[7].equals("1103")) {
			localName = addEnch(localName, "4000", 1);
		} else if(spac[7].equals("1104")) {
			localName = addEnch(localName, "5000", 1);
		} else if(spac[7].equals("1105")) {
			localName = addEnch(localName, "6000", 1);
		} else if(spac[7].equals("1106")) {
			localName = addEnch(localName, "7000", 1);
		} else if(spac[7].equals("1107")) {
			localName = addEnch(localName, "8000", 1);
		} else if(spac[7].equals("1108")) {
			localName = addEnch(localName, "9000", 1);
		} else if(spac[7].equals("1109")) {
			localName = addEnch(localName, "10000", 1);
		} else if(spac[7].equals("1200")) {
			localName = addEnch(localName, "1000", 2);
		} else if(spac[7].equals("1201")) {
			localName = addEnch(localName, "2000", 2);
		} else if(spac[7].equals("1202")) {
			localName = addEnch(localName, "3000", 2);
		} else if(spac[7].equals("1203")) {
			localName = addEnch(localName, "4000", 2);
		} else if(spac[7].equals("1204")) {
			localName = addEnch(localName, "5000", 2);
		} else if(spac[7].equals("1205")) {
			localName = addEnch(localName, "6000", 2);
		} else if(spac[7].equals("1206")) {
			localName = addEnch(localName, "7000", 2);
		} else if(spac[7].equals("1207")) {
			localName = addEnch(localName, "8000", 2);
		} else if(spac[7].equals("1208")) {
			localName = addEnch(localName, "9000", 2);
		} else if(spac[7].equals("1209")) {
			localName = addEnch(localName, "10000", 2);
		} else if(spac[7].equals("1300")) {
			localName = addEnch(localName, "1000", 3);
		} else if(spac[7].equals("1301")) {
			localName = addEnch(localName, "2000", 3);
		} else if(spac[7].equals("1302")) {
			localName = addEnch(localName, "3000", 3);
		} else if(spac[7].equals("1303")) {
			localName = addEnch(localName, "4000", 3);
		} else if(spac[7].equals("1304")) {
			localName = addEnch(localName, "5000", 3);
		} else if(spac[7].equals("1305")) {
			localName = addEnch(localName, "6000", 3);
		} else if(spac[7].equals("1306")) {
			localName = addEnch(localName, "7000", 3);
		} else if(spac[7].equals("1307")) {
			localName = addEnch(localName, "8000", 3);
		} else if(spac[7].equals("1308")) {
			localName = addEnch(localName, "9000", 3);
		} else if(spac[7].equals("1309")) {
			localName = addEnch(localName, "10000", 3);
		} else if(spac[7].equals("1400")) {
			localName = addEnch(localName, "1000", 4);
		} else if(spac[7].equals("1401")) {
			localName = addEnch(localName, "2000", 4);
		} else if(spac[7].equals("1402")) {
			localName = addEnch(localName, "3000", 4);
		} else if(spac[7].equals("1403")) {
			localName = addEnch(localName, "4000", 4);
		} else if(spac[7].equals("1404")) {
			localName = addEnch(localName, "5000", 4);
		} else if(spac[7].equals("1405")) {
			localName = addEnch(localName, "6000", 4);
		} else if(spac[7].equals("1406")) {
			localName = addEnch(localName, "7000", 4);
		} else if(spac[7].equals("1407")) {
			localName = addEnch(localName, "8000", 4);
		} else if(spac[7].equals("1408")) {
			localName = addEnch(localName, "9000", 4);
		} else if(spac[7].equals("1409")) {
			localName = addEnch(localName, "10000", 4);
		}
		
		if(spac[8].equals("1000")) {
			localName = addEnch(localName, "1000", 0);
		} else if(spac[8].equals("1001")) {
			localName = addEnch(localName, "2000", 0);
		} else if(spac[8].equals("1002")) {
			localName = addEnch(localName, "3000", 0);
		} else if(spac[8].equals("1003")) {
			localName = addEnch(localName, "4000", 0);
		} else if(spac[8].equals("1004")) {
			localName = addEnch(localName, "5000", 0);
		} else if(spac[8].equals("1005")) {
			localName = addEnch(localName, "6000", 0);
		} else if(spac[8].equals("1006")) {
			localName = addEnch(localName, "7000", 0);
		} else if(spac[8].equals("1007")) {
			localName = addEnch(localName, "8000", 0);
		} else if(spac[8].equals("1008")) {
			localName = addEnch(localName, "9000", 0);
		} else if(spac[8].equals("1009")) {
			localName = addEnch(localName, "10000", 0);
		} else if(spac[8].equals("1100")) {
			localName = addEnch(localName, "1000", 1);
		} else if(spac[8].equals("1101")) {
			localName = addEnch(localName, "2000", 1);
		} else if(spac[8].equals("1102")) {
			localName = addEnch(localName, "3000", 1);
		} else if(spac[8].equals("1103")) {
			localName = addEnch(localName, "4000", 1);
		} else if(spac[8].equals("1104")) {
			localName = addEnch(localName, "5000", 1);
		} else if(spac[8].equals("1105")) {
			localName = addEnch(localName, "6000", 1);
		} else if(spac[8].equals("1106")) {
			localName = addEnch(localName, "7000", 1);
		} else if(spac[8].equals("1107")) {
			localName = addEnch(localName, "8000", 1);
		} else if(spac[8].equals("1108")) {
			localName = addEnch(localName, "9000", 1);
		} else if(spac[8].equals("1109")) {
			localName = addEnch(localName, "10000", 1);
		} else if(spac[8].equals("1200")) {
			localName = addEnch(localName, "1000", 2);
		} else if(spac[8].equals("1201")) {
			localName = addEnch(localName, "2000", 2);
		} else if(spac[8].equals("1202")) {
			localName = addEnch(localName, "3000", 2);
		} else if(spac[8].equals("1203")) {
			localName = addEnch(localName, "4000", 2);
		} else if(spac[8].equals("1204")) {
			localName = addEnch(localName, "5000", 2);
		} else if(spac[8].equals("1205")) {
			localName = addEnch(localName, "6000", 2);
		} else if(spac[8].equals("1206")) {
			localName = addEnch(localName, "7000", 2);
		} else if(spac[8].equals("1207")) {
			localName = addEnch(localName, "8000", 2);
		} else if(spac[8].equals("1208")) {
			localName = addEnch(localName, "9000", 2);
		} else if(spac[8].equals("1209")) {
			localName = addEnch(localName, "10000", 2);
		} else if(spac[8].equals("1300")) {
			localName = addEnch(localName, "1000", 3);
		} else if(spac[8].equals("1301")) {
			localName = addEnch(localName, "2000", 3);
		} else if(spac[8].equals("1302")) {
			localName = addEnch(localName, "3000", 3);
		} else if(spac[8].equals("1303")) {
			localName = addEnch(localName, "4000", 3);
		} else if(spac[8].equals("1304")) {
			localName = addEnch(localName, "5000", 3);
		} else if(spac[8].equals("1305")) {
			localName = addEnch(localName, "6000", 3);
		} else if(spac[8].equals("1306")) {
			localName = addEnch(localName, "7000", 3);
		} else if(spac[8].equals("1307")) {
			localName = addEnch(localName, "8000", 3);
		} else if(spac[8].equals("1308")) {
			localName = addEnch(localName, "9000", 3);
		} else if(spac[8].equals("1309")) {
			localName = addEnch(localName, "10000", 3);
		} else if(spac[8].equals("1400")) {
			localName = addEnch(localName, "1000", 4);
		} else if(spac[8].equals("1401")) {
			localName = addEnch(localName, "2000", 4);
		} else if(spac[8].equals("1402")) {
			localName = addEnch(localName, "3000", 4);
		} else if(spac[8].equals("1403")) {
			localName = addEnch(localName, "4000", 4);
		} else if(spac[8].equals("1404")) {
			localName = addEnch(localName, "5000", 4);
		} else if(spac[8].equals("1405")) {
			localName = addEnch(localName, "6000", 4);
		} else if(spac[8].equals("1406")) {
			localName = addEnch(localName, "7000", 4);
		} else if(spac[8].equals("1407")) {
			localName = addEnch(localName, "8000", 4);
		} else if(spac[8].equals("1408")) {
			localName = addEnch(localName, "9000", 4);
		} else if(spac[8].equals("1409")) {
			localName = addEnch(localName, "10000", 4);
		}
		
		if(spac[9].equals("1000")) {
			localName = addEnch(localName, "1000", 0);
		} else if(spac[9].equals("1001")) {
			localName = addEnch(localName, "2000", 0);
		} else if(spac[9].equals("1002")) {
			localName = addEnch(localName, "3000", 0);
		} else if(spac[9].equals("1003")) {
			localName = addEnch(localName, "4000", 0);
		} else if(spac[9].equals("1004")) {
			localName = addEnch(localName, "5000", 0);
		} else if(spac[9].equals("1005")) {
			localName = addEnch(localName, "6000", 0);
		} else if(spac[9].equals("1006")) {
			localName = addEnch(localName, "7000", 0);
		} else if(spac[9].equals("1007")) {
			localName = addEnch(localName, "8000", 0);
		} else if(spac[9].equals("1008")) {
			localName = addEnch(localName, "9000", 0);
		} else if(spac[9].equals("1009")) {
			localName = addEnch(localName, "10000", 0);
		} else if(spac[9].equals("1100")) {
			localName = addEnch(localName, "1000", 1);
		} else if(spac[9].equals("1101")) {
			localName = addEnch(localName, "2000", 1);
		} else if(spac[9].equals("1102")) {
			localName = addEnch(localName, "3000", 1);
		} else if(spac[9].equals("1103")) {
			localName = addEnch(localName, "4000", 1);
		} else if(spac[9].equals("1104")) {
			localName = addEnch(localName, "5000", 1);
		} else if(spac[9].equals("1105")) {
			localName = addEnch(localName, "6000", 1);
		} else if(spac[9].equals("1106")) {
			localName = addEnch(localName, "7000", 1);
		} else if(spac[9].equals("1107")) {
			localName = addEnch(localName, "8000", 1);
		} else if(spac[9].equals("1108")) {
			localName = addEnch(localName, "9000", 1);
		} else if(spac[9].equals("1109")) {
			localName = addEnch(localName, "10000", 1);
		} else if(spac[9].equals("1200")) {
			localName = addEnch(localName, "1000", 2);
		} else if(spac[9].equals("1201")) {
			localName = addEnch(localName, "2000", 2);
		} else if(spac[9].equals("1202")) {
			localName = addEnch(localName, "3000", 2);
		} else if(spac[9].equals("1203")) {
			localName = addEnch(localName, "4000", 2);
		} else if(spac[9].equals("1204")) {
			localName = addEnch(localName, "5000", 2);
		} else if(spac[9].equals("1205")) {
			localName = addEnch(localName, "6000", 2);
		} else if(spac[9].equals("1206")) {
			localName = addEnch(localName, "7000", 2);
		} else if(spac[9].equals("1207")) {
			localName = addEnch(localName, "8000", 2);
		} else if(spac[9].equals("1208")) {
			localName = addEnch(localName, "9000", 2);
		} else if(spac[9].equals("1209")) {
			localName = addEnch(localName, "10000", 2);
		} else if(spac[9].equals("1300")) {
			localName = addEnch(localName, "1000", 3);
		} else if(spac[9].equals("1301")) {
			localName = addEnch(localName, "2000", 3);
		} else if(spac[9].equals("1302")) {
			localName = addEnch(localName, "3000", 3);
		} else if(spac[9].equals("1303")) {
			localName = addEnch(localName, "4000", 3);
		} else if(spac[9].equals("1304")) {
			localName = addEnch(localName, "5000", 3);
		} else if(spac[9].equals("1305")) {
			localName = addEnch(localName, "6000", 3);
		} else if(spac[9].equals("1306")) {
			localName = addEnch(localName, "7000", 3);
		} else if(spac[9].equals("1307")) {
			localName = addEnch(localName, "8000", 3);
		} else if(spac[9].equals("1308")) {
			localName = addEnch(localName, "9000", 3);
		} else if(spac[9].equals("1309")) {
			localName = addEnch(localName, "10000", 3);
		} else if(spac[9].equals("1400")) {
			localName = addEnch(localName, "1000", 4);
		} else if(spac[9].equals("1401")) {
			localName = addEnch(localName, "2000", 4);
		} else if(spac[9].equals("1402")) {
			localName = addEnch(localName, "3000", 4);
		} else if(spac[9].equals("1403")) {
			localName = addEnch(localName, "4000", 4);
		} else if(spac[9].equals("1404")) {
			localName = addEnch(localName, "5000", 4);
		} else if(spac[9].equals("1405")) {
			localName = addEnch(localName, "6000", 4);
		} else if(spac[9].equals("1406")) {
			localName = addEnch(localName, "7000", 4);
		} else if(spac[9].equals("1407")) {
			localName = addEnch(localName, "8000", 4);
		} else if(spac[9].equals("1408")) {
			localName = addEnch(localName, "9000", 4);
		} else if(spac[9].equals("1409")) {
			localName = addEnch(localName, "10000", 4);
		}
		
		itemIm.setLocalizedName(localName);
		item.setItemMeta(itemIm);
		return item;
	}
	
	public String makeEnch(String aryStr, String str, int num) {
		String[] ary = aryStr.split(",");
		String result = "";
		for(int i = 0 ; i < 10 ; i++) {
			if(i == num) {
				result = result + "," + str;
				continue;
			}
			result = result + "," + ary[i];
		}
		String data = result.substring(1);
		try {
			data = data.concat("," + ary[10]);
		} catch(Exception e) {
			
		}
		return data;
	}
	
	public String addEnch(String aryStr, String str, int num) {
		String[] ary = aryStr.split(",");
		String result = "";
		for(int i = 0 ; i < 10 ; i++) {
			if(i == num) {
				result = result + "," + Integer.toString(Integer.getInteger(str) + Integer.getInteger(ary[i]));
				continue;
			}
			result = result + "," + ary[i];
		}
		String data = result.substring(1);
		try {
			data = data.concat("," + ary[10]);
		} catch(Exception e) {
			
		}
		return data;
	}
	
	public String name(String grade) {
		
		String first = "잘못된";
		String second = "버그의";
		
		if(grade.equals("§5")) {
			first = getRandom(MythicFirstName);
			second = getRandom(MythicSecondName);			
		} else {
			first = getRandom(firstName);
			second = getRandom(secondName);
		}
		
		return first + " " + second;
	}
	
	public static String[] getRandom(String[][] array) {
	    int rnd = new Random().nextInt(array.length);
	    return array[rnd];
	}
	
	public static String getRandom(String[] array) {
	    int rnd = new Random().nextInt(array.length);
	    return array[rnd];
	}

}
